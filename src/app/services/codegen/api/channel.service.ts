// Данный файл сервиса был создан вручную для демонстрации

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { Channel } from '../model/GetAllChannelsQueryResult';
import { CreateChannelCommandResult } from '../model/CreateChannelCommandResult';
import { MessageData } from '../model/GetChannelMessagesQueryResult';
import { SendMessageCommandResult } from '../model/SendMessageCommandResult';

/**
 * test-chat API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.*/

@Injectable({
   providedIn: 'root',
})
export class ChannelService {
   protected basePath = 'http://localhost:3000';

   constructor(protected httpClient: HttpClient) {}

   /**
    * Получение всех каналов
    */
   public getChannels(): Observable<Channel[]> {
      return this.httpClient.request<Channel[]>(
         'get',
         `${this.basePath}/channels`,
         {},
      );
   }

   /**
    * Добавление канала
    */
   public addNewChannel(
      body?: Channel,
   ): Observable<CreateChannelCommandResult> {
      return this.httpClient.request<CreateChannelCommandResult>(
         'post',
         `${this.basePath}/channels`,
         {
            body: body,
         },
      );
   }

   /**
    * Получение сообщений канала по ИД
    * (в рамках упрощения сделано методом get с передачей параметра в роуте, а не в теле запроса)
    */
   public getChannelMessages(channelId: number): Observable<MessageData[]> {
      return this.httpClient.request<MessageData[]>(
         'get',
         `${this.basePath}/messages?channelId=${channelId}`,
         {},
      );
   }

   public sendMessage(
      body?: MessageData,
   ): Observable<SendMessageCommandResult> {
      return this.httpClient.request<SendMessageCommandResult>(
         'post',
         `${this.basePath}/messages`,
         {
            body: body,
         },
      );
   }
}
